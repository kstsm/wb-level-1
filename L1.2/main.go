package main

import (
	"fmt"
	"sync"
)

//Написать программу, которая конкурентно рассчитает значения квадратов чисел,
//взятых из массива [2,4,6,8,10], и выведет результаты в stdout.
//Подсказка: запусти несколько горутин, каждая из которых возводит число в квадрат.

func main() {
	// WaitGroup нужен, чтобы дождаться выполнения всех горутин
	var wg sync.WaitGroup

	// Исходный массив чисел
	arr := []int{2, 4, 6, 8, 10}

	// Добавляем в счетчик wg количество ожидаемых горутин.
	// Для оптимизации и удобства записал сразу количество значний из слайса
	wg.Add(len(arr))

	// Перебираем массив и для каждого числа запускаем горутину
	for _, num := range arr {
		// Передаем num как параметр в анонимную функцию,
		// чтобы избежать проблемы с замыканием
		go func(n int) {
			// Уменьшаем счетчик wg на 1 по завершении горутины
			defer wg.Done()
			// Выводим квадрат числа
			fmt.Println(n * n)
		}(num) // Вызываем анонимную функцию
	}

	// Ждём завершения всех горутин (пока счётчик wg не станет 0)
	wg.Wait()
}
