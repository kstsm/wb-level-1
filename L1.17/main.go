package main

import "fmt"

//Реализовать алгоритм бинарного поиска встроенными методами языка.
//Функция должна принимать отсортированный слайс и искомый элемент,
//возвращать индекс элемента или -1, если элемент не найден.
//Подсказка: можно реализовать рекурсивно или итеративно, используя цикл for.

func binarySearch(num int, arr []int) int {
	// Левый индекс поиска
	left := 0
	// Правый индекс поиска
	right := len(arr) - 1

	// Цикл продолжается, пока левый индекс не превысит правый
	for left <= right {
		// Находим середину текущего диапазона
		mid := left + (right-left)/2

		// Если средний элемент равен нужному числу, то возвращаем его индекс
		if arr[mid] == num {
			return mid
		} else if arr[mid] < num {
			// Если средний элемент меньше нужного числа, то ищем в правой половине
			left = mid + 1
		} else {
			// Если средний элемент больше нужного числа, то ищем в левой половине
			right = mid - 1
		}
	}

	// Возвращаем -1, если элемент не найден
	return -1
}

func main() {
	// Отсортированный срез для поиска
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

	// Ищем число 5 в срезе
	res := binarySearch(5, arr)

	// Выводим индекс найденного числа
	fmt.Println(res)
}
