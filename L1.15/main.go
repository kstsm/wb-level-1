package main

import (
	"fmt"
	"strings"
)

//К каким негативным последствиям может привести исходный код?
//Он может привести к утечке памяти. Переменная justString
//будет ссылаться на весь массив v, даже если нужны только первые 100 символов.

//Как это исправить?
//Нужно явно скопировать только нужный фрагмент строки в новый объект.
//Это можно сделать через copy, как в исправленном коде снизу

//Что происходит с переменной justString?
//В исходном коде justString ссылается на тот же массив, что и v, и тем самым удерживает всю строку в памяти.
//В исправленном варианте justString становится отдельной строкой, содержащей ровно 100 символов.

// justString глобальная переменная, в которую сохраняем результат
var justString string

// createHugeString создаёт большую строку указанного размера
func createHugeString(size int) string {
	return strings.Repeat("A", size)
}

// someFunc берёт первые 100 символов из большой строки и сохраняет их в justString
func someFunc() {
	// Создаём большую строку (1024 символа)
	v := createHugeString(1 << 10)

	// Исправленный вариант
	// создаём новый массив байт и копируем в него только первые 100 символов
	b := make([]byte, 100)
	copy(b, v[:100])
	// теперь justString хранит только 100 символов
	justString = string(b)
}

func main() {
	someFunc()
	// Используем переменную, чтобы избежать ошибки "unused variable"
	fmt.Println(justString)
}
