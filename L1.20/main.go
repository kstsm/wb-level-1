package main

import (
	"fmt"
)

//Разработать программу, которая переворачивает порядок слов в строке.
//Пример: входная строка:
//«snow dog sun», выход: «sun dog snow».
//Считайте, что слова разделяются одиночным пробелом.
//Постарайтесь не использовать дополнительные срезы, а выполнять операцию «на месте».

// Reverse переворачивает срез рун r на месте между индексами i и j включительно
func reverse(r []rune, i, j int) {
	for ; i < j; i, j = i+1, j-1 {
		// Меняем местами элементы с концов
		r[i], r[j] = r[j], r[i]
	}
}

// reverseWord переворачивает порядок слов в строке s
func reverseWord(s string) string {
	// преобразуем строку в []rune для корректной работы с Unicode
	r := []rune(s)

	// Переворачиваем всю строку целиком
	reverse(r, 0, len(r)-1)

	wordStart := 0
	// Проходим по каждому символу
	for i := 0; i <= len(r); i++ {
		// Если достигнут конец слова (пробел или конец строки)
		if i == len(r) || r[i] == ' ' {
			// Переворачиваем текущее слово обратно
			reverse(r, wordStart, i-1)
			// Переходим к началу следующего слова
			wordStart = i + 1
		}
	}
	// Возвращаем строку с перевернутыми словами
	return string(r)
}

func main() {
	s := "snow dog sun"

	//До: snow dog sun
	fmt.Println("До:", s)

	//После: sun dog snow
	fmt.Println("После:", reverseWord(s))
}
